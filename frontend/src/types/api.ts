/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/todos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all todos
         * @description Retrieve a list of all todos
         */
        get: operations["getTodos"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Todo: {
            /**
             * Format: uuid
             * @description Unique identifier for the todo
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description The title of the todo
             * @example Buy groceries
             */
            title: string;
            /**
             * @description Optional detailed description of the todo
             * @example Buy milk, bread, and eggs from the grocery store
             */
            description?: string;
            /**
             * @description Whether the todo is completed
             * @example false
             */
            completed: boolean;
            /**
             * @description Priority level of the todo
             * @example medium
             * @enum {string}
             */
            priority?: "low" | "medium" | "high";
            /**
             * Format: date-time
             * @description When the todo was created
             * @example 2024-01-15T10:30:00Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description When the todo was last updated
             * @example 2024-01-15T12:45:00Z
             */
            updatedAt?: string;
        };
        Error: {
            /**
             * @description Error type
             * @example INTERNAL_ERROR
             */
            error: string;
            /**
             * @description Human-readable error message
             * @example An unexpected error occurred
             */
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getTodos: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved todos */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: components["schemas"]["Todo"][];
                        /** @description Total number of todos */
                        total: number;
                    };
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
